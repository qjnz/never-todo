{"version":3,"sources":["components/TodoListItem.tsx","components/TodoList.tsx","components/AddTodo.tsx","hooks/useGiphy.ts","components/ShowGiphys.tsx","App.tsx","index.tsx"],"names":["TodoListItem","todo","toggleTodo","draggable","htmlFor","text","style","textDecoration","completed","undefined","id","type","checked","onChange","className","TodoList","todos","completedTodos","filter","pendingTodos","map","key","length","AddTodo","addTodo","useState","setText","value","e","target","disabled","onClick","preventDefault","apiKey","useGiphy","keyword","giphys","setGiphys","isLoading","setIsLoading","error","setError","query","a","url","fetch","catch","err","resp","json","result","data","useEffect","loadData","ShowGiphys","setQuery","val","currentTarget","message","item","index","title","src","images","original","alt","initialTodos","App","setTodos","some","alert","newTodos","selectedTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23a55bf9.chunk.js","sourcesContent":["import React, { FC } from 'react'\n\ninterface Props {\n  todo: Todo\n  toggleTodo: ToggleTodo\n}\n\nexport const TodoListItem: FC<Props> = ({ todo, toggleTodo }) => {\n  const onClick = () => {\n    toggleTodo(todo)\n  }\n\n  // const onDragStart = () => {}\n\n  // const onDragOver = () => {}\n\n  // const onDrop = () => {}\n\n  return (\n    // <li draggable=\"true\" onDragStart={onDragStart} onDragOver={onDragOver} onDrop={onDrop}>\n    <li draggable=\"true\">\n      <label\n        htmlFor={todo.text}\n        style={{ textDecoration: todo.completed ? 'line-through' : undefined }}\n      >\n        <input id={todo.text} type=\"checkbox\" checked={todo.completed} onChange={onClick} />\n        {todo.text}\n\n        <i className=\"fas fa-arrows-alt-v\" />\n      </label>\n    </li>\n  )\n}\n","import React, { FC } from 'react'\nimport { TodoListItem } from './TodoListItem'\n\ninterface Props {\n  todos: Todo[]\n  toggleTodo: ToggleTodo\n}\n\nexport const TodoList: FC<Props> = ({ todos, toggleTodo }) => {\n  const completedTodos = todos.filter((todo) => todo.completed)\n  const pendingTodos = todos.filter((todo) => !todo.completed)\n\n  return (\n    <div className=\"todo-list\">\n      <ul className=\"no-bullets\">\n        {pendingTodos.map((todo) => (\n          <TodoListItem key={todo.text} todo={todo} toggleTodo={toggleTodo} />\n        ))}\n      </ul>\n      <div className=\"todo-completed\">\n        <span>Completed: ({completedTodos.length})</span>\n        <ul className=\"no-bullets\">\n          {completedTodos.map((todo) => (\n            <TodoListItem key={todo.text} todo={todo} toggleTodo={toggleTodo} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n","import React, { ChangeEvent, FC, useState } from 'react'\n\ninterface Props {\n  addTodo: AddTodo\n}\n\nexport const AddTodo: FC<Props> = ({ addTodo }) => {\n  const [text, setText] = useState('')\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value)\n  }\n\n  const onSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault()\n    addTodo(text)\n    setText('')\n  }\n\n  return (\n    <form>\n      <input type=\"text\" value={text} onChange={onChange} />\n\n      <button type=\"submit\" disabled={text ? false : true} onClick={onSubmit}>\n        Add Todo\n      </button>\n    </form>\n  )\n}\n","import { useState, useEffect } from 'react'\n\nconst apiKey = 'nr8NcCB1vX8gPJXh7e3T91KS1KnJrLjM'\n\nexport const useGiphy = (keyword: string) => {\n  const [giphys, setGiphys] = useState<Gif[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<Error>()\n\n  async function loadData(query: string) {\n    setIsLoading(true)\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${query}&limit=10&offset=0&rating=g&lang=en`\n    const resp = await fetch(url).catch((err: Error) => {\n      setIsLoading(false)\n      setError(err)\n    })\n\n    const result = await (resp as any).json()\n\n    setGiphys(result.data)\n\n    setIsLoading(false)\n  }\n\n  useEffect(() => {\n    if (!keyword) {\n      return\n    }\n\n    loadData(keyword)\n  }, [keyword])\n\n  return [giphys, isLoading, error] as const\n}\n","import React, { useState } from 'react'\nimport { useGiphy } from '../hooks/useGiphy'\n\ninterface Props {\n  keyword: string\n}\n\nexport const ShowGiphys = ({ keyword }: Props) => {\n  const [query, setQuery] = useState(keyword)\n  const [giphys, isLoading, error] = useGiphy(query)\n  const handleOnChange = (e: React.FormEvent<HTMLInputElement>) => {\n    const val = e.currentTarget.value\n    setQuery(val)\n  }\n\n  return (\n    <div className=\"container\">\n      <input value={query} onChange={handleOnChange} />\n\n      {error && <div>{error.message}</div>}\n      {isLoading && <div>Loading...</div>}\n      {!isLoading &&\n        giphys.length &&\n        giphys.map((item, index) => {\n          return (\n            <div key={index}>\n              <h1>{item.title}</h1>\n              <img src={item.images?.original?.url} alt={item.title} />\n            </div>\n          )\n        })}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { TodoList } from './components/TodoList'\nimport { AddTodo } from './components/AddTodo'\nimport { ShowGiphys } from './components/ShowGiphys'\nimport './App.css'\n\nconst initialTodos: Todo[] = [\n  { text: 'Go space travel 🚀', completed: false },\n  { text: 'Go shopping 🛍️', completed: false },\n  { text: 'Read Eloquent JavaScript 📚', completed: false },\n  { text: 'Go to gym 🏃‍♀️', completed: true },\n]\n\nconst App = () => {\n  const [todos, setTodos] = useState(initialTodos)\n  const toggleTodo = (selectedTodo: Todo) => {\n    const newTodos = todos.map((todo) => {\n      if (todo.text === selectedTodo.text) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        }\n      }\n\n      return todo\n    })\n\n    setTodos(newTodos)\n  }\n\n  const addTodo: AddTodo = (text) => {\n    const isExisting = todos.some((todo) => todo.text === text)\n    if (isExisting) {\n      alert(`${text} is already in the list 😆`)\n      return false\n    }\n\n    const newTodos = [...todos, { text, completed: false }]\n    setTodos(newTodos)\n  }\n\n  return (\n    <div className=\"container\">\n      <AddTodo addTodo={addTodo} />\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <ShowGiphys keyword=\"happy monday\" />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}