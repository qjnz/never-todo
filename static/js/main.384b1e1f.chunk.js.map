{"version":3,"sources":["components/TodoListItem.tsx","components/TodoList.tsx","components/AddTodo.tsx","App.tsx","index.tsx"],"names":["TodoListItem","todo","toggleTodo","htmlFor","text","style","textDecoration","completed","undefined","id","type","defaultChecked","checked","onClick","TodoList","todos","completedTodos","filter","className","map","key","length","AddTodo","addTodo","useState","setText","value","onChange","e","target","disabled","preventDefault","initialTodos","App","setTodos","newTodos","selectedTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAOaA,EAA0B,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAK9C,OACE,4BACE,2BACEC,QAASF,EAAKG,KACdC,MAAO,CAAEC,eAAgBL,EAAKM,UAAY,oBAAiBC,IAE3D,2BACEC,GAAIR,EAAKG,KACTM,KAAK,WACLC,gBAAgB,EAChBC,QAASX,EAAKM,UACdM,QAfQ,WACdX,EAAWD,MAgBNA,EAAKG,QCjBDU,EAAsB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOb,EAAiB,EAAjBA,WACrCc,EAAiBD,EAAME,QAAO,SAAChB,GAAD,OAAUA,EAAKM,aAEnD,OACE,yBAAKW,UAAU,aACb,wBAAIA,UAAU,cACXH,EAAMI,KAAI,SAAClB,GAAD,OACT,kBAAC,EAAD,CAAcmB,IAAKnB,EAAKG,KAAMH,KAAMA,EAAMC,WAAYA,QAG1D,yBAAKgB,UAAU,kBACb,6CAAmBF,EAAeK,OAAlC,QCbKC,EAAqB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACzBC,mBAAS,IADgB,mBAC1CpB,EAD0C,KACpCqB,EADoC,KAajD,OACE,8BACE,2BAAOf,KAAK,OAAOgB,MAAOtB,EAAMuB,SAZnB,SAACC,GAChBH,EAAQG,EAAEC,OAAOH,UAaf,4BAAQhB,KAAK,SAASoB,UAAU1B,EAAqBS,QAVxC,SAACe,GAChBA,EAAEG,iBACFR,EAAQnB,GACRqB,EAAQ,MAON,cClBAO,G,MAAuB,CAC3B,CAAE5B,KAAM,cAAeG,WAAW,GAClC,CAAEH,KAAM,2BAA4BG,WAAW,GAC/C,CAAEH,KAAM,YAAaG,WAAW,KAkCnB0B,EA/BH,WAAO,IAAD,EACUT,mBAASQ,GADnB,mBACTjB,EADS,KACFmB,EADE,KAuBhB,OACE,yBAAKhB,UAAU,aACb,kBAAC,EAAD,CAASK,QAPY,SAACnB,GACxB,IAAM+B,EAAQ,sBAAOpB,GAAP,CAAc,CAAEX,OAAMG,WAAW,KAC/C2B,EAASC,MAMP,kBAAC,EAAD,CAAUpB,MAAOA,EAAOb,WAvBT,SAACkC,GAClB,IAAMD,EAAWpB,EAAMI,KAAI,SAAClB,GAC1B,OAAIA,EAAKG,OAASgC,EAAahC,KACtB,2BACFH,GADL,IAEEM,WAAYN,EAAKM,YAIdN,KAGTiC,EAASC,QCrBbE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.384b1e1f.chunk.js","sourcesContent":["import React, { FC } from 'react'\n\ninterface Props {\n  todo: Todo\n  toggleTodo: ToggleTodo\n}\n\nexport const TodoListItem: FC<Props> = ({ todo, toggleTodo }) => {\n  const onClick = () => {\n    toggleTodo(todo)\n  }\n\n  return (\n    <li>\n      <label\n        htmlFor={todo.text}\n        style={{ textDecoration: todo.completed ? 'line-through' : undefined }}\n      >\n        <input\n          id={todo.text}\n          type=\"checkbox\"\n          defaultChecked={false}\n          checked={todo.completed}\n          onClick={onClick}\n        />\n        {todo.text}\n      </label>\n    </li>\n  )\n}\n","import React, { FC } from 'react'\nimport { TodoListItem } from './TodoListItem'\n\ninterface Props {\n  todos: Todo[]\n  toggleTodo: ToggleTodo\n}\n\nexport const TodoList: FC<Props> = ({ todos, toggleTodo }) => {\n  const completedTodos = todos.filter((todo) => todo.completed)\n\n  return (\n    <div className=\"todo-list\">\n      <ul className=\"no-bullets\">\n        {todos.map((todo) => (\n          <TodoListItem key={todo.text} todo={todo} toggleTodo={toggleTodo} />\n        ))}\n      </ul>\n      <div className=\"todo-completed\">\n        <span>Completed: ({completedTodos.length})</span>\n      </div>\n    </div>\n  )\n}\n","import React, { ChangeEvent, FC, useState } from 'react'\n\ninterface Props {\n  addTodo: AddTodo\n}\n\nexport const AddTodo: FC<Props> = ({ addTodo }) => {\n  const [text, setText] = useState('')\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value)\n  }\n\n  const onSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault()\n    addTodo(text)\n    setText('')\n  }\n\n  return (\n    <form>\n      <input type=\"text\" value={text} onChange={onChange} />\n\n      <button type=\"submit\" disabled={text ? false : true} onClick={onSubmit}>\n        Add Todo\n      </button>\n    </form>\n  )\n}\n","import React, { useState } from 'react'\nimport { TodoList } from './components/TodoList'\nimport { AddTodo } from './components/AddTodo'\nimport './App.css'\n\nconst initialTodos: Todo[] = [\n  { text: 'Go shopping', completed: false },\n  { text: 'Read Eloquent JavaScript', completed: false },\n  { text: 'Go to gym', completed: true },\n]\n\nconst App = () => {\n  const [todos, setTodos] = useState(initialTodos)\n\n  const toggleTodo = (selectedTodo: Todo) => {\n    const newTodos = todos.map((todo) => {\n      if (todo.text === selectedTodo.text) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        }\n      }\n\n      return todo\n    })\n\n    setTodos(newTodos)\n  }\n\n  const addTodo: AddTodo = (text) => {\n    const newTodos = [...todos, { text, completed: false }]\n    setTodos(newTodos)\n  }\n\n  return (\n    <div className=\"container\">\n      <AddTodo addTodo={addTodo} />\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}